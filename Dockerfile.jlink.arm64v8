### 1st stage, build the app
# FROM maven:3.6.3-jdk-11-slim as build
# FROM maven:3.8.3-openjdk-17-slim as build
FROM openjdk:17-jdk-alpine as build
RUN apk add --no-cache bash maven

WORKDIR /helidon

# Create a first layer to cache the mvn dependencies in the local repository
# Incremental docker builds will always resume after that, unless you update the pom
ADD pom.xml .
RUN mvn package -Dmaven.test.skip -Declipselink.weave.skip

# Do the Maven build to create the custom Java Runtime Image
# Incremental docker builds will resume here when you change sources
ADD src src
RUN mvn -Ddocker.build=true package -Pjlink-image -DskipTests
RUN echo "done!"

### 2nd stage, build the final image with the JRI built in the 1st stage
# FROM arm64v8/debian:stretch-slim
# WORKDIR /helidon
# COPY --from=build /helidon/target/shopping-service-jri ./
# ENTRYPOINT ["/bin/bash", "/helidon/bin/start"]
# EXPOSE 9080

FROM alpine:3.14.3
# RUN apk add --no-cache bash
WORKDIR /helidon
COPY --from=build /helidon/target/shopping-service-jri ./
# ENTRYPOINT ["/bin/bash", "/helidon/bin/start"]
ENTRYPOINT ["/bin/sh", "/helidon/bin/start"]
EXPOSE 9080